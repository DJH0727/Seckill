server:
  port: 8080
  tomcat:
    threads:
      max: 1000           # 最大处理请求线程数
    max-connections: 10000  # 最大连接数
    accept-count: 1000      # 当线程都忙时，还能排队的连接数

#访问RabbitMQ管理界面 http://47.122.159.177:15672/
#服务器password: Linux@123456
app:
  host:
    mysql_host: 47.122.159.177 # MySQL 服务地址
    redis_host: 47.122.159.177  # Redis 服务地址
    rabbitmq_host: 47.122.159.177  # RabbitMQ 服务地址



spring:
  thymeleaf:
    cache: false  # 是否启用 Thymeleaf 缓存
    mode: HTML  # 模板模式
    encoding: UTF-8  # 编码
    prefix: classpath:/templates/  # 模板文件前缀
    suffix: .html  # 模板文件后缀
    servlet:
      content-type: text/html;charset=UTF-8  # 内容类型
  application:
    name: seckill  # Spring Boot 应用名称
  datasource:
    url: jdbc:mysql://${app.host.mysql_host}:3306/seckill?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
    username: user  # 数据库用户名
    password: 123456  # 数据库密码
    driver-class-name: com.mysql.cj.jdbc.Driver  # MySQL 驱动类名，Spring Boot 会自动配置这个
    hikari:
      maximum-pool-size: 100     # 数据库最大连接数
      minimum-idle: 20           # 最小空闲连接数
      connection-timeout: 30000  # 获取连接超时(ms)
      idle-timeout: 600000
      max-lifetime: 1800000
  data:
    redis:
      host: ${app.host.redis_host}
      port: 6379
      password: RedisPas123       # 如果设置了密码，这里填写
      timeout: 3000    # 连接超时（毫秒）

  rabbitmq:
    host: ${app.host.rabbitmq_host}
    port: 5672
    username: user
    password: 123456
    virtual-host: /  # RabbitMQ 虚拟主机
    listener:
      simple:
        #消费者最小数量
        concurrency: 10
        #消费者最大数量
        max-concurrency: 10
        #限制消费者每次只能处理一条消息，处理完在继续下一条消息
        prefetch: 1
        #启动是默认启动容器
        auto-startup: true
        #被拒绝时重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        #发布重试，默认false
        enabled: true
        #重试时间，默认1000ms
        initial-interval: 1000ms
        #重试最大次数，默认3次
        max-attempts: 3
        #最大重试间隔时间
        max-interval: 10000ms
        #重试的间隔乘数，比如配2。0  第一等10s 第二次等20s 第三次等40s
        multiplier: 1
  web:
    resources:
      static-locations: classpath:/static/

mybatis:
  mapper-locations: classpath:mapper/*.xml  # MyBatis 的 Mapper XML 文件的位置，classpath 指的是资源目录，mapper/*.xml 表示在 resources/mapper 目录下的所有 XML 文件
  type-aliases-package: com.xmu.seckill.entity  # MyBatis 实体类的路径，告诉 MyBatis 在哪里寻找与数据库表对应的 Java 实体类

